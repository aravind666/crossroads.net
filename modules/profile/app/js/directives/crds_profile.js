// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  angular.module("crdsProfile").directive("crdsProfile", function($timeout, $animate, $compile, $templateCache) {
    return {
      restrict: 'EA',
      scope: true,
      controller: function($scope, $element, $attrs, Profile) {
        return new ((function() {
          function _Class() {
            this.registerLogin = __bind(this.registerLogin, this);
            var template;
            console.log("Profile Controller");
            this.addLoading();
            template = $templateCache.get('profile/app/templates/profile.html');
            this.profileTemplate = $compile(template);
            $scope.$watch("securityContext.loggedIn", (function(_this) {
              return function(loggedIn) {
                var parent, user;
                user = $scope.securityContext.user;
                if (loggedIn && user) {
                  console.log("crdsProfile - Current user has changed to " + user.FirstName);
                  Profile.getContact(user.ContactId).then(function(data) {
                    return $scope.contact = data;
                  });
                  _this.removeLoading();
                  if (_this.loginCtrl) {
                    _this.loginCtrl.hide();
                  }
                  _this.profileElement = _this.profileTemplate($scope);
                  return $element.append(_this.profileElement);
                } else if (loggedIn === false) {
                  console.log("crdsProfile - User has now logged out");
                  _this.removeLoading();
                  parent = $element.parent();
                  if (_this.profileElement) {
                    _this.profileElement.remove();
                  }
                  if (_this.loginCtrl) {
                    return _this.loginCtrl.show(parent, $element);
                  }
                } else if (loggedIn === null) {
                  console.log("crdsProfile - User is in loading state");
                  if (_this.loginCtrl) {
                    _this.loginCtrl.hide();
                  }
                  if (_this.profileElement) {
                    _this.profileElement.remove();
                  }
                  return _this.addLoading();
                }
              };
            })(this));
          }

          _Class.prototype.registerLogin = function(loginCtrl) {
            console.log("Registered login controller");
            return this.loginCtrl = loginCtrl;
          };

          _Class.prototype.removeLoading = function() {
            if ($attrs.loadingClass) {
              $animate.removeClass($element, $attrs.loadingClass);
            }
            return $element.html('');
          };

          _Class.prototype.addLoading = function() {
            if ($attrs.loadingClass) {
              return $animate.addClass($element, $attrs.loadingClass);
            }
          };

          return _Class;

        })());
      }
    };
  });

}).call(this);
